#include <stdio.h>
#include <stdlib.h>


struct Node {
    int data;
    struct Node* next;
};


struct Stack {
    struct Node* top;
};


struct Queue {
    struct Node* front;
    struct Node* rear;
};

void initStack(struct Stack* stack) {
    stack->top = NULL;
}

void initQueue(struct Queue* queue) {
    queue->front = queue->rear = NULL;
}


void push(struct Stack* stack, int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = stack->top;
    stack->top = newNode;
    printf("Pushed %d onto the stack.\n", data);
}


void pop(struct Stack* stack) {
    if (stack->top == NULL) {
        printf("Stack underflow! The stack is empty.\n");
        return;
    }
    struct Node* temp = stack->top;
    stack->top = stack->top->next;
    printf("Popped %d from the stack.\n", temp->data);
    free(temp);
}




void displayStack(struct Stack* stack) {
    if (stack->top == NULL) {
        printf("Stack is empty.\n");
        return;
    }
    struct Node* temp = stack->top;
    printf("Stack contents: ");
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}



void enqueue(struct Queue* queue, int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    if (queue->rear == NULL) {
        queue->front = queue->rear = newNode;
    } else {
        queue->rear->next = newNode;
        queue->rear = newNode;
    }
    printf("Enqueued %d into the queue.\n", data);
}

void dequeue(struct Queue* queue) {
    if (queue->front == NULL) {
        printf("Queue underflow! The queue is empty.\n");
        return;
    }
    struct Node* temp = queue->front;
    queue->front = queue->front->next;
    if (queue->front == NULL) {
        queue->rear = NULL;
    }
    printf("Dequeued %d from the queue.\n", temp->data);
    free(temp);
}

void displayQueue(struct Queue* queue) {
    if (queue->front == NULL) {
        printf("Queue is empty.\n");
        return;
    }
    struct Node* temp = queue->front;
    printf("Queue contents: ");
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

void menu() {
    struct Stack stack;
    struct Queue queue;
    int choice, data;

    initStack(&stack);
    initQueue(&queue);

    while (1) {
        printf("\nMenu:\n");
        printf("1. Stack Operations\n");
        printf("2. Queue Operations\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                while (1) {
                    printf("\nStack Operations:\n");
                    printf("1. Push\n");
                    printf("2. Pop\n");
                   
                    printf("3. Display Stack\n");
                    printf("4. Go Back\n");
                    printf("Enter your choice: ");
                    scanf("%d", &choice);

                    switch (choice) {
                        case 1:
                            printf("Enter the data to push: ");
                            scanf("%d", &data);
                            push(&stack, data);
                            break;
                        case 2:
                            pop(&stack);
                            break;
                       
                        case 3:
                            displayStack(&stack);
                            break;
                        case 4:
                            break;
                        default:
                            printf("Invalid choice. Try again.\n");
                            continue;
                    }
                    if (choice == 5) break;
                }
                break;
            case 2:
                while (1) {
                    printf("\nQueue Operations:\n");
                    printf("1. Enqueue\n");
                    printf("2. Dequeue\n");
                    printf("3. Display Queue\n");
                    printf("4. exit\n");
                    printf("Enter your choice: ");
                    scanf("%d", &choice);

                    switch (choice) {
                        case 1:
                            printf("Enter the data to enqueue: ");
                            scanf("%d", &data);
                            enqueue(&queue, data);
                            break;
                        case 2:
                            dequeue(&queue);
                            break;
                        case 3:
                            displayQueue(&queue);
                            break;
                        case 4:
                            break;
                        default:
                            printf("Invalid choice. Try again.\n");
                            continue;
                    }
                    if (choice == 4) break;
                }
                break;
            case 3:
                printf("Exiting program...\n");
                return;
            default:
                printf("Invalid choice. Try again.\n");
        }
    }
}

// Main function
int main() {
    menu();
    return 0;
}
